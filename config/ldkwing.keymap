#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <behaviors/mouse_keys.dtsi>

// #define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
// #define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10
#define COMBO(NAME, BINDINGS, KEYPOS) \
combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0>; \
};

#define BASE 0
#define NUMBERS 1
#define SYMBOLS 2
#define SYSTEM 3
#define GAMING 4
#define KEYBOARD 5
#define SINGLE 6

// Behavior Overrides
&lt {
  tapping-term-ms = <200>;
  flavor = "hold-preferred";
};

&soft_off {
  hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};

/ {
  macros {
    // Spotlight
    spotlight: spotlight {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LGUI>, <&macro_tap &kp SPACE>, <&macro_release &kp LGUI>; 
    };
    // Alt + Tab
    alt_tab: alt_tab {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LALT>, <&macro_tap &kp TAB>, <&macro_release &kp LALT>;
    };
// Ctrl + Alt + Del
    ctrl_alt_del: ctrl_alt_del {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LCTRL &kp LALT>, <&macro_tap &kp DEL>, <&macro_release &kp LCTRL &kp LALT>;
    };

    // Alt + F4
    alt_ff: alt_ff {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LALT>, <&macro_tap &kp F4>, <&macro_release &kp LALT>;
    };
    // Win + Tab
    win_tab: win_tab {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LGUI>, <&macro_tap &kp TAB>, <&macro_release &kp LGUI>;
    };
    // Vim Exit
    vim_exit: vim_exit {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap     &kp COLON &kp Q>;
    };
    // Vim Write
    vim_write: vim_write {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap     &kp COLON &kp W>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };

  combos {
    compatible = "zmk,combos";

    //   0  1  2  3  4 		 5  6  7  8  9
    //  10 11 12 13 14 		15 16 17 18 19
    //  20 21 22 23 24 		25 26 27 28 29
    //        30 31 32		33 34 35

    COMBO(to_layer,&to 4,31 32 33 34)
    COMBO(escape0,&kp ESC, 0 1)
    COMBO(escape1,&kp ESC, 1 2)
    COMBO(escape2,&kp ESC,7 8)
    COMBO(tab1,&kp TAB,2 3)
    COMBO(tab2,&kp TAB,6 7)
    COMBO(vim_exit,&vim_exit,25 26)
    COMBO(vim_write,&vim_write,26 27)
  };

  behaviors {
    hm: homerow_mods {  
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping-term-ms = <400>;
      require-prior-idle-ms = <125>;
      quick-tap-ms = <300>;
      flavor = "hold-preferred";
      bindings = <&kp>, <&kp>;
    };
    ent: enter_mods {  
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "hold-preferred";
      bindings = <&kp>, <&kp>;
    };
    td_g0: tap_dance_gaming_0 {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N1>, <&kp N2>, <&kp N3>;
    };
    td_mouse0: tap_dance_mouse_0 {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&mkp MB1>, <&mkp MB2>, <&mkp MB3>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      display-name = "Base";
      bindings = <
        &kp Q         &kp W         &kp E       &kp R       &kp T     &kp Y     &kp U       &kp I       &kp O       &kp P
        &hm LSHIFT A  &hm LCTRL S   &hm LALT D  &hm LGUI F  &kp G     &kp H     &hm RGUI J  &hm RALT K  &hm RCTRL L &hm RSHIFT BSPC
        &kp Z         &kp X         &kp C       &kp V       &kp B     &kp N     &kp M       &kp COMMA   &kp DOT     &kp DEL 
        &kp SPACE     &lt 1 TAB     &lt 2 ESC   &ent LSHIFT ENTER
      > ;
    };
    number_layer {
      display-name = "Numbers";
      bindings = <
        &kp N1      &kp N2      &kp N3      &kp  N4       &kp N5        &kp N6          &kp N7          &kp N8            &kp N9          &kp N0
        &sk LSHIFT  &sk LCTRL   &sk LALT    &sk LGUI      &alt_ff       &kp LEFT        &kp DOWN        &kp UP            &kp RIGHT       &msc SCRL_UP
        &kp ESC     &kp CAPS    &kp PSCRN   &kp DEL       &td_mouse0    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP      &mmv MOVE_RIGHT &msc SCRL_DOWN
        &trans      &trans      &trans      &trans
      >;

    };
    symbols_layer {
      display-name = "Symbols";
      bindings = <
        &kp EXCL     &kp QMARK    &kp SQT     &kp DQT     &kp GRAVE      &kp CARET     &kp AMPS      &kp TILDE     &kp UNDER     &kp PIPE
        &kp LPAR     &kp LBKT     &kp LT      &kp LBRC    &kp COLON      &kp EQUAL     &kp PLUS      &kp MINUS     &kp STAR     &kp FSLH
        &kp RPAR     &kp RBKT     &kp GT      &kp RBRC    &kp SEMI       &kp AT        &kp POUND     &kp DLLR     &kp PRCNT     &kp BSLH
        &trans       &trans       &trans      &trans
      >;

    };
    system_layer {
      display-name = "System";
      bindings = <
        &kp F1      &kp F2        &kp F3        &kp F4      &kp F5     &kp F6       &kp F7        &kp F8        &kp F9      &kp F10
        &sk LSHIFT  &sk LCTRL     &sk LALT      &sk LGUI    &kp C_PP   &kp SLCK     &kp KP_NUM    &kp C_RESET   &kp F11     &kp F12
        &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT &kp HOME     &kp PG_DN     &kp PG_UP     &kp END     &kp INSERT
        &to 4       &trans        &trans        &to 5
      >;
    };
    gaming_layer {
      display-name = "Gaming";
      bindings = <
        &td_g0     &kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O
        &kp LSHIFT &kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K     &kp L
        &kp LCTRL  &kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp N4     &kp N5
        &kp SPACE  &kp M     &kp ESC   &to 0
      >;
    };
    keyboard_layer {
      display-name = "Keyboard";
      bindings = <
        &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5      &kp T   &kp E   &kp S   &kp T   &kp EXCL 
        &none           &none           &none         &bt BT_PRV    &bt BT_NXT        &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
        &soft_off       &studio_unlock  &none         &bt BT_CLR    &bt BT_CLR_ALL    &none   &none   &none   &none   &none
        &trans          &trans          &trans        &to 0
      >;
    };
    single_layer {
      display-name = "Single";
      bindings = <
        &kp ESC     &spotlight    &kp UP        &win_tab    &ctrl_alt_del       &ctrl_alt_del &win_tab    &kp UP        &spotlight      &kp ESC
        &alt_tab    &kp LEFT      &kp DOWN      &kp RIGHT   &kp ENTER           &kp ENTER     &kp LEFT    &kp DOWN      &kp RIGHT       &alt_tab  
        &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp BSPC    &kp DEL             &kp DEL       &kp BSPC    &kp C_VOL_UP  &kp C_VOL_DN    &kp C_MUTE
        &trans      &trans        &trans        &trans  
      >;
    };
  };
};

